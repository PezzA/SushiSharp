@using SushiSharp.Cards
@using SushiSharp.Game
@using SushiSharp.Game.Models
@using SushiSharp.Web.Components.Sushi.Chat

@inject IDialogService DialogService
@rendermode InteractiveServer

<MudGrid>
    <!-- Game Parameters Column -->
    <MudItem xs="6">
        <MudItem xs="4">
            <MudNumericField @bind-Value="_maxPlayers" Label="Maximum Players" Variant="Variant.Text" Min="2" Max="8"/>
        </MudItem>
        <MudGrid>
            @foreach (var player in PublicVisible.Players)
            {
                <PlayerSelector GridWidth="6" Player="player"/>
            }
        </MudGrid>


        <MenuSelect Slot="MenuSlot.Rolls" Xs="12" Default="CardType.MakiRolls" Readonly="true"/>
        <MenuSelect Slot="MenuSlot.Appetiser1" Xs="12" Default="CardType.Tempura" Readonly="true"/>
        <MenuSelect Slot="MenuSlot.Appetiser2" Xs="12" Default="CardType.Sashimi" Readonly="true"/>
        <MenuSelect Slot="MenuSlot.Appetiser3" Xs="12" Default="CardType.Dumpling" Readonly="true"/>
        <MenuSelect Slot="MenuSlot.Special1" Xs="12" Default="CardType.Chopsticks" Readonly="true"/>
        <MenuSelect Slot="MenuSlot.Special2" Xs="12" Default="CardType.Wasabi" Readonly="true"/>
        <MenuSelect Slot="MenuSlot.Desert" Xs="12" Default="CardType.Pudding" Readonly="true"/>

        <MudItem xs="12">
            <MudSlider Value="@_maxThinkingTime" Min="15" Max="30">Maximum Turn Time (secs) : @_maxThinkingTime </MudSlider>
        </MudItem>

    </MudItem>
    <!-- Chat Column -->
    <MudItem xs="6">
        <Chat/>
    </MudItem>
</MudGrid>

<MudButton @onclick="Start" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Start" Color="Color.Primary">Start Game!</MudButton>
<MudButton @onclick="Leave" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.ExitToApp" Color="Color.Warning">Leave Game</MudButton>


@code {
    [Parameter] public required PublicVisible PublicVisible { get; set; }
    [Parameter] public EventCallback<string> LeaveGame { get; set; }
    [Parameter] public EventCallback<string> StartGame { get; set; }
    [Parameter] public required string CurrentName { get; set; }

    private int _maxPlayers = 0;
    private int _maxThinkingTime = 20;

    protected override void OnInitialized()
    {
        _maxPlayers = PublicVisible.Parameters.MaxPlayers;
        _maxThinkingTime = PublicVisible.Parameters.MaxTurnTime;
    }

    private async Task Leave()
    {
        await LeaveGame.InvokeAsync(PublicVisible.Id);
    }

    private async Task Start()
    {
        await StartGame.InvokeAsync(PublicVisible.Id);
    }

}