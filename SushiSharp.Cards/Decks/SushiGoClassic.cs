namespace SushiSharp.Cards.Decks;

public class SushiGoClassic
{
    public static Dictionary<CardType, Card[]> CardList = new()
    {
        { CardType.Tempura, [
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
            new Card([CardSymbol.Tempura], CardType.Tempura),
        ] },
        { CardType.Sashimi, [
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
            new Card([CardSymbol.Sashimi], CardType.Sashimi),
        ] },
        { CardType.Dumpling, [
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
            new Card([CardSymbol.Dumpling], CardType.Dumpling),
        ] },
        { CardType.Pudding, [
            new Card([CardSymbol.Pudding], CardType.Pudding),
            new Card([CardSymbol.Pudding], CardType.Pudding),
            new Card([CardSymbol.Pudding], CardType.Pudding),
            new Card([CardSymbol.Pudding], CardType.Pudding),
            new Card([CardSymbol.Pudding], CardType.Pudding),
            new Card([CardSymbol.Pudding], CardType.Pudding),
            new Card([CardSymbol.Pudding], CardType.Pudding),
            new Card([CardSymbol.Pudding], CardType.Pudding),
            new Card([CardSymbol.Pudding], CardType.Pudding),
            new Card([CardSymbol.Pudding], CardType.Pudding),
        ] },
        { CardType.Wasabi, [
            new Card([CardSymbol.Wasabi], CardType.Wasabi),
            new Card([CardSymbol.Wasabi], CardType.Wasabi),
            new Card([CardSymbol.Wasabi], CardType.Wasabi),
            new Card([CardSymbol.Wasabi], CardType.Wasabi),
            new Card([CardSymbol.Wasabi], CardType.Wasabi),
            new Card([CardSymbol.Wasabi], CardType.Wasabi),
        ] },
        { CardType.Chopsticks, [
            new Card([CardSymbol.Chopsticks], CardType.Chopsticks),
            new Card([CardSymbol.Chopsticks], CardType.Chopsticks),
            new Card([CardSymbol.Chopsticks], CardType.Chopsticks),
            new Card([CardSymbol.Chopsticks], CardType.Chopsticks),
        ] },
        { CardType.Nagiri, [
            new Card([CardSymbol.NagiriEgg], CardType.Nagiri),
            new Card([CardSymbol.NagiriEgg], CardType.Nagiri),
            new Card([CardSymbol.NagiriEgg], CardType.Nagiri),
            new Card([CardSymbol.NagiriEgg], CardType.Nagiri),
            new Card([CardSymbol.NagiriEgg], CardType.Nagiri),
            new Card([CardSymbol.NagiriSquid], CardType.Nagiri),
            new Card([CardSymbol.NagiriSquid], CardType.Nagiri),
            new Card([CardSymbol.NagiriSquid], CardType.Nagiri),
            new Card([CardSymbol.NagiriSquid], CardType.Nagiri),
            new Card([CardSymbol.NagiriSquid], CardType.Nagiri),
            new Card([CardSymbol.NagiriSalmon], CardType.Nagiri),
            new Card([CardSymbol.NagiriSalmon], CardType.Nagiri),
            new Card([CardSymbol.NagiriSalmon], CardType.Nagiri),
            new Card([CardSymbol.NagiriSalmon], CardType.Nagiri),
            new Card([CardSymbol.NagiriSalmon], CardType.Nagiri),
            new Card([CardSymbol.NagiriSalmon], CardType.Nagiri),
            new Card([CardSymbol.NagiriSalmon], CardType.Nagiri),
            new Card([CardSymbol.NagiriSalmon], CardType.Nagiri),
            new Card([CardSymbol.NagiriSalmon], CardType.Nagiri),
            new Card([CardSymbol.NagiriSalmon], CardType.Nagiri),
        ] },
        { CardType.MakiRolls, [
            new Card([CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
            new Card([CardSymbol.MakiRoll, CardSymbol.MakiRoll, CardSymbol.MakiRoll], CardType.MakiRolls),
        ] },
    };

    public static List<Card> GetDeck()
    {
        return CardList
            .Values
            .SelectMany(x=> x )
            .ToList();
    }
}